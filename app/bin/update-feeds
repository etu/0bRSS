#!/usr/bin/env php
<?php
declare(strict_types=1);

use DI\ContainerBuilder;
use ZerobRSS\FeedReader;
use ZerobRSS\Dao\Feeds as FeedsDao;
use ZerobRSS\Dao\Articles as ArticlesDao;

require_once(__DIR__.'/../vendor/autoload.php');

/**
 * Instantiate PHP-DI ContainerBuilder
 */
$containerBuilder = new ContainerBuilder();


/**
 * Set up config
 */
(require(__DIR__.'/../src/bootstrap/config.php'))($containerBuilder);


/**
 * Set up dependencies
 */
(require(__DIR__.'/../src/bootstrap/dependencies.php'))($containerBuilder);


/**
 * Build PHP-DI Container instance
 */
$container = $containerBuilder->build();


/** @var FeedReader $feedReader */
$feedReader = $container->get(FeedReader::class);

/** @var FeedsDao $feedsDao */
$feedsDao = $container->get(FeedsDao::class);

/** @var ArticlesDao $articlesDao */
$articlesDao = $container->get(ArticlesDao::class);


// Fetch all feeds to update
$feedsToUpdate = $feedsDao->getFeedsToUpdate()->fetchAll();

if (!empty($feedsToUpdate)) {
    foreach ($feedsToUpdate as $feed) {
        $feedReader->open($feed->feed_uri);

        $feedUpdates = [
            'updated' => date('Y-m-d H:i:s'),
            'next_update' => date('Y-m-d H:i:s', strtotime('+'.$feed->update_interval.' minutes'))
        ];

        // Fetch feed-posts and add create/update them in the database
        foreach ($feedReader->getPosts() as $post) {
            $article = [
                'feed_id'    => $feed->id,
                'identifier' => $post->id,
                'title'      => $post->title,
                'uri'        => $post->link,
                'date'       => $post->date,
                'body'       => $post->content
            ];

            try {
                $articlesDao->create($article);
            } catch (Exception $e) {
                $articlesDao->update($article['identifier'], $article);
            }
        }

        // Mark feed as updated and update updated time and time to next update
        $feedsDao->update($feed->id, $feedUpdates);
    }
}
